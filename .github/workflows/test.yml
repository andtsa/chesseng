name: test

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, labeled]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'release') && !contains(github.event.pull_request.labels.*.name, 'ready') && (contains(github.event.pull_request.labels.*.name, 'draft') || github.event.pull_request.reviewers == '') }}
    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        uses: actions/checkout@v4
      - name: Gather rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --verbose

  test_lint:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'release') && !contains(github.event.pull_request.labels.*.name, 'ready') && (contains(github.event.pull_request.labels.*.name, 'draft') || github.event.pull_request.reviewers == '') }}
    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        uses: actions/checkout@v4
      - name: Gather rust nightly
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy, rustfmt

      - name: Formatting
        run: cargo fmt -- --check

      - name: Clippy
        run: cargo clippy --release --no-deps --all-targets -- -D warnings

      - name: Report
        run: cargo test --release -vv

  bench:
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'release') && !contains(github.event.pull_request.labels.*.name, 'ready') && (contains(github.event.pull_request.labels.*.name, 'draft') || github.event.pull_request.reviewers == '') }}
    runs-on: ubuntu-latest

    steps:
      - name: Prepare
        uses: actions/checkout@v4
      - name: Gather rust nightly
        uses: dtolnay/rust-toolchain@nightly

      - name: Run benchmarks
        run: |
          cargo bench -- --nocapture

